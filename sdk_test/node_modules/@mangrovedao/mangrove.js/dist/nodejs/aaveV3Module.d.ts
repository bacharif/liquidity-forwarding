import * as ethers from "ethers";
import { typechain } from "./types";
import { Mangrove } from ".";
import Big from "big.js";
declare type SignerOrProvider = ethers.ethers.Signer | ethers.ethers.providers.Provider;
/**
 * The OfferLogic class connects to a OfferLogic contract.
 * It posts onchain offers.
 */
declare class AaveV3Module {
    #private;
    mgv: Mangrove;
    contract: typechain.AaveV3Module;
    constructor(mgv: Mangrove, address: string, signer?: SignerOrProvider);
    approveDelegation(tokenName: string, borrower: string, overrides?: ethers.Overrides): Promise<ethers.ContractTransaction>;
    status(tokenName: string, account: string): Promise<{
        available: Big;
        borrowable: Big;
        borrowing: Big;
    }>;
    logStatus(tokenNames: string[], account?: string): Promise<void>;
}
export default AaveV3Module;
//# sourceMappingURL=aaveV3Module.d.ts.map