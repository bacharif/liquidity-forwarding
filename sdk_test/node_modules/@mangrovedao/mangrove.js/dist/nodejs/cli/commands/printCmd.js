"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.builder = exports.describe = exports.aliases = exports.command = void 0;
const chalk_1 = __importDefault(require("chalk"));
const __1 = require("../..");
exports.command = "print <base> <quote>";
exports.aliases = [];
exports.describe = "print the offers on a market";
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
const builder = (yargs) => {
    return yargs
        .positional("base", { type: "string", demandOption: true })
        .positional("quote", { type: "string", demandOption: true })
        .option("maxOffers", { type: "number", default: 10 })
        .option("ba", { choices: ["asks", "bids"] })
        .option("nodeUrl", { type: "string", demandOption: true });
};
exports.builder = builder;
async function handler(argv) {
    const mangrove = await __1.Mangrove.connect(argv.nodeUrl);
    const market = await mangrove.market({
        base: argv.base,
        quote: argv.quote,
        bookOptions: { maxOffers: argv.maxOffers },
    });
    const { asks, bids } = market.getBook();
    console.group("MARKET");
    console.log("Base token\t", chalk_1.default.blue(`${argv.base}`));
    console.log("Quote token\t", chalk_1.default.green(`${argv.quote}`));
    console.groupEnd();
    if (!argv.ba || argv.ba === "asks") {
        console.log();
        console.log();
        printOfferList("asks", asks);
    }
    if (!argv.ba || argv.ba === "bids") {
        console.log();
        console.log();
        printOfferList("bids", bids);
    }
    process.exit(0);
}
exports.handler = handler;
function printOfferList(ba, semibook) {
    console.group(ba);
    console.table([...semibook]);
    console.groupEnd();
}
//# sourceMappingURL=printCmd.js.map