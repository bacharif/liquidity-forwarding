#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const yargs = __importStar(require("yargs"));
const parrotCmd = __importStar(require("./commands/parrotCmd"));
const printCmd = __importStar(require("./commands/printCmd"));
const retractCmd = __importStar(require("./commands/retractCmd"));
const nodeCmd = __importStar(require("./commands/nodeCmd"));
const ENV_VAR_PREFIX = "MGV";
yargs
    .command(parrotCmd)
    .command(printCmd)
    .command(retractCmd)
    .command(nodeCmd) // note: node subcommand env vars are prefixed with MGV_NODE instead of MGV_
    .strictCommands()
    .demandCommand(1, "You need at least one command before moving on")
    .env(ENV_VAR_PREFIX) // Environment variables prefixed with 'MGV_' are parsed as arguments, see .env([prefix])
    .epilogue(`Arguments may be provided in env vars beginning with '${ENV_VAR_PREFIX}_'. ` +
    "For example, MGV_NODE_URL=https://node.url can be used instead of --nodeUrl https://node.url")
    .help().argv;
//# sourceMappingURL=mgv.js.map