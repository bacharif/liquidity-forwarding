"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cashness = exports.displayedPriceDecimals = exports.defaultDisplayedPriceDecimals = exports.displayedDecimals = exports.defaultDisplayedDecimals = exports.decimals = exports.addresses = void 0;
const addresses_json_1 = __importDefault(require("./constants/addresses.json"));
const tokenDecimals_json_1 = __importDefault(require("./constants/tokenDecimals.json"));
const tokenDisplayedDecimals_json_1 = __importDefault(require("./constants/tokenDisplayedDecimals.json"));
const tokenCashness_json_1 = __importDefault(require("./constants/tokenCashness.json"));
const tokenDisplayedAsPriceDecimals_json_1 = __importDefault(require("./constants/tokenDisplayedAsPriceDecimals.json"));
const ethers_1 = require("ethers");
const mangrove_core_1 = __importDefault(require("@mangrovedao/mangrove-core"));
// Merge known addresses and addresses provided by mangrove-core, with priority to mangrove-core addresses.
const addresses = { ...addresses_json_1.default };
exports.addresses = addresses;
// Make sure all addresses are with checksum casing
for (const [network, networkAddresses] of Object.entries(addresses)) {
    for (const [name, address] of Object.entries(networkAddresses)) {
        if (address) {
            addresses[network][name] = ethers_1.ethers.utils.getAddress(address);
        }
    }
}
for (const [network, networkAddresses] of Object.entries(mangrove_core_1.default.addresses)) {
    addresses[network] ?? (addresses[network] = {});
    for (const { name, address } of networkAddresses) {
        addresses[network][name] = ethers_1.ethers.utils.getAddress(address);
    }
}
exports.decimals = tokenDecimals_json_1.default;
exports.defaultDisplayedDecimals = 2;
exports.displayedDecimals = tokenDisplayedDecimals_json_1.default;
exports.defaultDisplayedPriceDecimals = 6;
exports.displayedPriceDecimals = tokenDisplayedAsPriceDecimals_json_1.default;
exports.cashness = tokenCashness_json_1.default;
//# sourceMappingURL=constants.js.map