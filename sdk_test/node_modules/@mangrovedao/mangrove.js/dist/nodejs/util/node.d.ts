import DevNode from "./devNode";
import { JsonRpcProvider } from "@ethersproject/providers";
export declare const builder: (yargs: any) => any;
declare type deployParams = {
    provider: JsonRpcProvider;
    stateCache: boolean;
    targetContract: string;
    script: string;
    host: string;
    port: number;
    pipe: boolean;
    setMulticallCodeIfAbsent: boolean;
    setToyENSCodeIfAbsent: boolean;
};
declare type connectParams = {
    spawn: boolean;
    deploy: boolean;
    url: string;
    provider: JsonRpcProvider;
    host: string;
    port: number;
    pipe: boolean;
};
export declare const node: (argv: any, useYargs?: boolean) => {
    connect(): Promise<{
        url: string;
        accounts: {
            address: string;
            key: string;
        }[];
        params: connectParams & deployParams;
        deploy: () => Promise<void>;
        snapshot: () => Promise<string>;
        revert: (snapshotId?: string) => Promise<void>;
        process: any;
        spawnEndedPromise: any;
    }>;
    watchAllToyENSEntries(): Promise<DevNode.fetchedContract[]>;
};
export default node;
//# sourceMappingURL=node.d.ts.map