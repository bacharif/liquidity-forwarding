/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { MangroveOrder, MangroveOrderInterface } from "../MangroveOrder";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMangrove",
        name: "mgv",
        type: "address",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasreq",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMangrove",
        name: "mangrove",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "makerData",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mgvData",
        type: "bytes32",
      },
    ],
    name: "LogIncident",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMangrove",
        name: "mangrove",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NewOwnedOffer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMangrove",
        name: "mangrove",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "fillOrKill",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "takerWants",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "takerGives",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "fillWants",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "restingOrder",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "takerGot",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "takerGave",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bounty",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "restingOrderId",
        type: "uint256",
      },
    ],
    name: "OrderSummary",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "SetAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "outbound_tkn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "inbound_tkn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "SetExpiry",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract AbstractRouter",
        name: "",
        type: "address",
      },
    ],
    name: "SetRouter",
    type: "event",
  },
  {
    inputs: [],
    name: "MGV",
    outputs: [
      {
        internalType: "contract IMangrove",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NO_ROUTER",
    outputs: [
      {
        internalType: "contract AbstractRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OFFER_GASREQ",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "checkList",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "expiring",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasreq",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasprice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "getMissingProvision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "outbound_tkn",
            type: "address",
          },
          {
            internalType: "address",
            name: "inbound_tkn",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "offerId",
            type: "uint256",
          },
          {
            internalType: "OfferPacked",
            name: "offer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wants",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gives",
            type: "uint256",
          },
          {
            internalType: "OfferDetailPacked",
            name: "offerDetail",
            type: "uint256",
          },
          {
            internalType: "GlobalPacked",
            name: "global",
            type: "uint256",
          },
          {
            internalType: "LocalPacked",
            name: "local",
            type: "uint256",
          },
        ],
        internalType: "struct MgvLib.SingleOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "makerExecute",
    outputs: [
      {
        internalType: "bytes32",
        name: "ret",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "outbound_tkn",
            type: "address",
          },
          {
            internalType: "address",
            name: "inbound_tkn",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "offerId",
            type: "uint256",
          },
          {
            internalType: "OfferPacked",
            name: "offer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wants",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gives",
            type: "uint256",
          },
          {
            internalType: "OfferDetailPacked",
            name: "offerDetail",
            type: "uint256",
          },
          {
            internalType: "GlobalPacked",
            name: "global",
            type: "uint256",
          },
          {
            internalType: "LocalPacked",
            name: "local",
            type: "uint256",
          },
        ],
        internalType: "struct MgvLib.SingleOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "makerData",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "mgvData",
            type: "bytes32",
          },
        ],
        internalType: "struct MgvLib.OrderResult",
        name: "result",
        type: "tuple",
      },
    ],
    name: "makerPosthook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "offerGasreq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "offerIds",
        type: "uint256[]",
      },
    ],
    name: "offerOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "offerOwners_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "provisionOf",
    outputs: [
      {
        internalType: "uint256",
        name: "provision",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
    ],
    name: "reserve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deprovision",
        type: "bool",
      },
    ],
    name: "retractOffer",
    outputs: [
      {
        internalType: "uint256",
        name: "freeWei",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract AbstractRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "setExpiry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AbstractRouter",
        name: "router_",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "outbound_tkn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "inbound_tkn",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fillOrKill",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "takerWants",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerGives",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "fillWants",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "restingOrder",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "pivotId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryDate",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderLogic.TakerOrder",
        name: "tko",
        type: "tuple",
      },
    ],
    name: "take",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "takerGot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerGave",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bounty",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offerId",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderLogic.TakerOrderResult",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "outbound_tkn",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "inbound_tkn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gives",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pivotId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "updateOffer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
    ],
    name: "withdrawFromMangrove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class MangroveOrder__factory {
  static readonly abi = _abi;
  static createInterface(): MangroveOrderInterface {
    return new utils.Interface(_abi) as MangroveOrderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MangroveOrder {
    return new Contract(address, _abi, signerOrProvider) as MangroveOrder;
  }
}
