/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { MgvCleaner, MgvCleanerInterface } from "../MgvCleaner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "mgv",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "outbound_tkn",
        type: "address",
      },
      {
        internalType: "address",
        name: "inbound_tkn",
        type: "address",
      },
      {
        internalType: "uint256[4][]",
        name: "targets",
        type: "uint256[4][]",
      },
      {
        internalType: "bool",
        name: "fillWants",
        type: "bool",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "outbound_tkn",
        type: "address",
      },
      {
        internalType: "address",
        name: "inbound_tkn",
        type: "address",
      },
      {
        internalType: "uint256[4][]",
        name: "targets",
        type: "uint256[4][]",
      },
      {
        internalType: "bool",
        name: "fillWants",
        type: "bool",
      },
      {
        internalType: "address",
        name: "takerToImpersonate",
        type: "address",
      },
    ],
    name: "collectByImpersonation",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class MgvCleaner__factory {
  static readonly abi = _abi;
  static createInterface(): MgvCleanerInterface {
    return new utils.Interface(_abi) as MgvCleanerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MgvCleaner {
    return new Contract(address, _abi, signerOrProvider) as MgvCleaner;
  }
}
