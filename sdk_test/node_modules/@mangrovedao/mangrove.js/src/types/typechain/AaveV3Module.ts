/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface AaveV3ModuleInterface extends utils.Interface {
  functions: {
    "IMPLEMENTATION()": FunctionFragment;
    "INTEREST_RATE_MODE()": FunctionFragment;
    "ORACLE()": FunctionFragment;
    "POOL()": FunctionFragment;
    "REFERRAL_CODE()": FunctionFragment;
    "_staticdelegatecall(bytes)": FunctionFragment;
    "borrowed(address,address)": FunctionFragment;
    "debtToken(address)": FunctionFragment;
    "maxGettableUnderlying(address,bool,address)": FunctionFragment;
    "overlying(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "IMPLEMENTATION"
      | "INTEREST_RATE_MODE"
      | "ORACLE"
      | "POOL"
      | "REFERRAL_CODE"
      | "_staticdelegatecall"
      | "borrowed"
      | "debtToken"
      | "maxGettableUnderlying"
      | "overlying"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "IMPLEMENTATION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INTEREST_RATE_MODE",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ORACLE", values?: undefined): string;
  encodeFunctionData(functionFragment: "POOL", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "REFERRAL_CODE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_staticdelegatecall",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowed",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "debtToken",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "maxGettableUnderlying",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<boolean>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "overlying",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "IMPLEMENTATION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INTEREST_RATE_MODE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ORACLE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "POOL", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "REFERRAL_CODE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_staticdelegatecall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "borrowed", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "debtToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "maxGettableUnderlying",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "overlying", data: BytesLike): Result;

  events: {};
}

export interface AaveV3Module extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AaveV3ModuleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    IMPLEMENTATION(overrides?: CallOverrides): Promise<[string]>;

    INTEREST_RATE_MODE(overrides?: CallOverrides): Promise<[BigNumber]>;

    ORACLE(overrides?: CallOverrides): Promise<[string]>;

    POOL(overrides?: CallOverrides): Promise<[string]>;

    REFERRAL_CODE(overrides?: CallOverrides): Promise<[number]>;

    _staticdelegatecall(
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    borrowed(
      underlying: PromiseOrValue<string>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    debtToken(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string] & { debtTkn: string }>;

    maxGettableUnderlying(
      asset: PromiseOrValue<string>,
      tryBorrow: PromiseOrValue<boolean>,
      onBehalf: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        maxRedeemableUnderlying: BigNumber;
        maxBorrowAfterRedeemInUnderlying: BigNumber;
      }
    >;

    overlying(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string] & { aToken: string }>;
  };

  IMPLEMENTATION(overrides?: CallOverrides): Promise<string>;

  INTEREST_RATE_MODE(overrides?: CallOverrides): Promise<BigNumber>;

  ORACLE(overrides?: CallOverrides): Promise<string>;

  POOL(overrides?: CallOverrides): Promise<string>;

  REFERRAL_CODE(overrides?: CallOverrides): Promise<number>;

  _staticdelegatecall(
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  borrowed(
    underlying: PromiseOrValue<string>,
    account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  debtToken(
    asset: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  maxGettableUnderlying(
    asset: PromiseOrValue<string>,
    tryBorrow: PromiseOrValue<boolean>,
    onBehalf: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & {
      maxRedeemableUnderlying: BigNumber;
      maxBorrowAfterRedeemInUnderlying: BigNumber;
    }
  >;

  overlying(
    asset: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    IMPLEMENTATION(overrides?: CallOverrides): Promise<string>;

    INTEREST_RATE_MODE(overrides?: CallOverrides): Promise<BigNumber>;

    ORACLE(overrides?: CallOverrides): Promise<string>;

    POOL(overrides?: CallOverrides): Promise<string>;

    REFERRAL_CODE(overrides?: CallOverrides): Promise<number>;

    _staticdelegatecall(
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    borrowed(
      underlying: PromiseOrValue<string>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    debtToken(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    maxGettableUnderlying(
      asset: PromiseOrValue<string>,
      tryBorrow: PromiseOrValue<boolean>,
      onBehalf: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        maxRedeemableUnderlying: BigNumber;
        maxBorrowAfterRedeemInUnderlying: BigNumber;
      }
    >;

    overlying(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    IMPLEMENTATION(overrides?: CallOverrides): Promise<BigNumber>;

    INTEREST_RATE_MODE(overrides?: CallOverrides): Promise<BigNumber>;

    ORACLE(overrides?: CallOverrides): Promise<BigNumber>;

    POOL(overrides?: CallOverrides): Promise<BigNumber>;

    REFERRAL_CODE(overrides?: CallOverrides): Promise<BigNumber>;

    _staticdelegatecall(
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    borrowed(
      underlying: PromiseOrValue<string>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    debtToken(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxGettableUnderlying(
      asset: PromiseOrValue<string>,
      tryBorrow: PromiseOrValue<boolean>,
      onBehalf: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    overlying(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    IMPLEMENTATION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    INTEREST_RATE_MODE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ORACLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    POOL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    REFERRAL_CODE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _staticdelegatecall(
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    borrowed(
      underlying: PromiseOrValue<string>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    debtToken(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxGettableUnderlying(
      asset: PromiseOrValue<string>,
      tryBorrow: PromiseOrValue<boolean>,
      onBehalf: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    overlying(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
